Version 3.0-beta.1 - Skye Isle
----------------------------------
ADMIN USER-FACING CHANGES

extra themes are available, and single-click installable
'services' section in admin menu (for site-content administration, as distinct from page-content, i.e. user-interactive things like ecommerce, forms data)
replacement notifications mechanism
consistent js-initiated dialogs (no more 'native' popups)
displayed images may also be svg, avif, png or fonticon, with svg preferred if present
revised UI for UDT processing (those are now files, not database records) see next item
editing of templates, stylesheets, user-defined-tags by syntax hilighter Ace or CodeMirror
module-specific templates can also be processed via the general template-edit UI (which is no longer driven by DesignManager module)
extra core module: ConsoleAuth

BEHIND THE SCENES

enhanced security - latest PHP-password-cache algorithm, better user-input sanitization, login refactored to a module which can be replaced with different security)
replacement database-interface, more tailored to extract performance from MySQL
cache API revised to support caching by anything
multi-mode caching, auto-selectable if suitable PHP capability is present (Predis|Memcached|APCu|YAC|roll-your-own) as alternates to the existing filesystem files
to facilitate autoloading at least, all PHP classes across the CMSMS core (except CMSModule), have been migrated to the CMSMS namespace, and in some cases that merited a rename as well (CMSMS\cms_config BAH!). Until further notice (way in the future, but dev's should migrate soonish) the former classes will continue to work. In some contexts,  PHP can't deal with aliases (e.g. for method type-declarations) so a former class-space/name MUST continue to be used there until adjustments are made.
support namespace 'CMSAsset' for non-core classes added into <siterootpath>/assets/classes and descendants
exported FilePicker-module 'profile' infrastructure, pending its closer integration with User and Group permissions mechanisms

optional per-page inclusions (e.g. css, js urls/verbatim) for admin-pages and module-actions, to supplement and/or replace template content and CMSModule::GetHeaderHTML(). So e.g. js can be removed from templates, and inserted at page-bottom.
pre-configuration of site-installation parameters
also support installation based on sources in a git repo

INFRASTRUCTURE

Coded for PHP 7.2+, compatible with 7.2.x to 8.1 (at least)
jQuery 3.7.0 (but use of 2.2.4 may be configured, to provide for effective upgrades
 from 1.x to 3.x which need two stages, via an intermediate 2.x)
jQuery migrate 3.4.0 (but use of 1.4.1 may be configured, to work with jQ 2.2.4)
jQuery-UI & jQuery-UI-css 1.13.2
support-js (cookies, sortable, uploads etc) latest relevant releases
Smarty 4.3.0 (Smarty 2 API support is retained and deprecated)
replacement for the OutMailer (formerly CMSMailer) module backend PHPMailer class (due to license incompatibility)
TinyMCE (MicroTiny module) 4.9.11 Now has incompatible license, so a replacement editor is needed

CONFIG PARAMETERS

new

assets_url
content_language - for PHP htmlentities() and html_entity_decode(), default 'xhtml'
deprecations - if this parameter, and also debug, are not empty, deprecation notices will be thrown when something (method, property etc) deprecated is used
develop_mode (formerly developer_mode) - 1 when somebody authorized is working on the site content/operation
jqversion - set to '2' (unquoted) to use jQuery 2.2.4 and jQuery-migrate 1.4.1 instead of 3.x versions
menu_cssclass css class to be applied to admin console context menus. Each admin theme should have such class(es)
pr_root_url - protocol-relative root URI
usertags_path - name of filesystem folder where 'user-defined tag' files are stored, default 'assets-path'/'user_plugins'

deprecated

assets_dir instead use (longtime-present) assets_path
max_upload_size ignored (php.ini upload_max_filesize value prevails)
output_compression ignored
ssl_image_uploads_url see image_uploads_url
ssl_uploads_url see uploads_url
ssl_url see root_url
startup_mact_processing ignored
use_adodb_lite ignored
use_hierarchy ignored
use_smarty_php_tags ignored
upload_max_filesize ignored (php.ini value prevails)

DEFINES

new

CMS_ASSETS_URL - URL corresponding to CMS_ASSETS_PATH
CMS_DEPREC - whether to throw upon use of something deprecated
CMS_FILETAGS_PATH - filesystem path of folder containing UDT/user-plugin files
CMS_SCRIPTS_PATH - filesystem path of top folder containing js resource files
CMS_SCRIPTS_URL - URL corresponding to CMS_SCRIPTS_PATH
CMS_THEMES_PATH - filesystem path of top folder containing theme-related files
CMS_THEMES_URL - URL corresponding to CMS_THEMES_PATH
EXT_EXEC - flag for tailoring cms_htmlenties() and cms_specialchars()

PLUGINS

new
add_bottomcontent
add_headcontent
assets_url
bottom_includes
cms_cookie
cms_init_editor
cms_queue_css
cms_queue_script
cms_render_css
cms_render_scripts
disable_template
edit_template
gather_content
get_jquery
header_includes
localedate_format (modifier)
scripts_url
syntax_area
tabs_restart
theme_root

NOTE: The 'main' function in each function-type plugin is like
   smarty_function_my_name($params, $smarty-object)
Smarty will not recognise a plugin whose function is named with an extra 'cms_'
i.e. the name MUST now be 'smarty_function_my_name', NOT 'smarty_cms_function_my_name'.
The 2nd argument (whatever named) will be a Smarty Internal Template-class
object, and (for Smarty 3.1.32+) MUST NOT be a reference to such obect.
The installer remedies those breakages as best it can, but might miss some cases.

To access the main Smarty class: $smarty-object->smarty

The main function name MUST NOT include a qualifier before the plugin type, like smarty[stuff]_xxxxx e.g. smarty_cms_xxxxx. Current smarty cannot process such.
(Not to be confused with e.g. smarty_function_cms_xxxxx which remains valid.)

deprecated

cms_jquery  see get_jquery
cms_stylesheet  media, designid parameters are deprecated (ignored)
global_content  global content blocks are just templates since CMSMS 2
fetch_pagedata  replicates {content} tag
process_pagedata out-of-order displayed-page processing is automatic

changed

cms_textarea  adapted to work with updated FormUtils::create_textarea()
all date-formatters expect date()-compatible formats, but will convert deprecated strftime()-compatible formats if possible
current_date  if no format is given, site-preference 'defaultdateformat' is used
cms_stylesheet  min, styles parameters added, automatic sorting of output media-types

LOCATIONS

deprecated

non-core modules in <siterootpath>/modules
  migrated to <siterootpath>/assets/modules (or whatever the 'assets' folder is named)
resources in <siterootpath>/assets/images migrated to ...assets/media (ibid re name)
resources in <siterootpath>/assets/css migrated to ...assets/styles (ibid re name)
javascript files in <siterootpath>/lib/jquery
  jQuery & cmsms core scripts migrated to <siterootpath>/lib/js, other scripts to <siterootpath>/assets/js (or whatever the 'assets' folder is named)
  links to relocated non-jquery files remain in <siterootpath>/lib/jquery
smarty templates, stylesheets, UDT's can be stored as standalone files instead of database records. The location and type of storage is transparent to the user.

INSTALLER

the concept of 'phar' and 'expanded' installer-versions is defunct - 'automated' and 'manual' (respectively) are better. Both versions include and do the same things
the manual installer can operate on a host without PHP's phar extension
build-parameters are read from a .ini file
one such parameter prescribes installer files form: zip (default) tar.bz2 tar.gz tar (intended for further manipulation by system commands)
uses a single compression-type throughout, easily configured via the aforementioned parameter
symlinks in the source-files are handled properly
less scope for confusion about 'advanced' mode functionality
user-inputs required during an installer session can be pre-defined in a .ini fle. With all of them in place, an installer session takes only about 90 seconds
UI supports rtl locales
non-core modules can also be included by the release-builder among installer source-files, in which case those modules become optional selections during installation
a custom 'support-url' can be specified, in which case it will be displayed in the admin console instead of a link to CMSMS website
installs and upgrades support renamed admin and/or assets and/or user_plugins folders
processes initial/demo-site content in .xml file
uses shared copies of db-connection and smarty classes
minimum database server MySQL version 5.5 (released in 2011) or MariaDB equivalent
warns if database permissions are unnecessarily broad/risky (a matter for discussion with the db admin)
cleans up after itself

deprecated

Smarty2 API - e.g. method assign_by_ref() wraps assignByRef(). {php}{/php} tags remain valid, though disabled by CMSMS in many contexts. See https://github.com/smarty-php/smarty/blob/master/libs/SmartyBC.class.php
use of any php method as a variable-modifier in templates Direct use of such methods remains valid, provided the security policy allows the method 
adodb-lite database-interface API
page-element creation via the module-class API (CreateInput...() and the like) - use CMSMS\FormUtils-class (aka CmsFormUtils-class) API See also related BREAKING item, below
page-tab functions via the Admintheme classes - use CMSMS\AdminTabs-class (aka cms_admin_tabs-class) API
most of the page-tab functions in the module-class - same replacement as previous point
some individual methods scattered across various classes - refer to API documentation
module-related classes & interfaces without suitable namespace
css styling using the '960 Grid System' - migrate to cssgrid with fallback to flexbox or e.g. currently-included resources blueprint.css (grid), flex-grid-lite.css (flexbox)

DETAILS
  - New admin-page-content direct-placement methods: CMSModule::AdminPageContent(), add|remove|get_page_headtext(), add|remove|get_page_foottext()
  - New notification methods: CMSModule::ShowInfo(),ShowWarning(),SetInfo(),SetWarning()
  - New method: CMSModule::create_pageurl()
  - New methods: CmsApp::disable_template_processing(),template_processing_allowed(),add_shutdown(),
         GetScriptsManager(),GetStylesManager(),GetJobManager(),GetCookieManager(),GetSiteUUID()
  - New methods: cms_admin_sendheaders(),cms_get_css(),
         cms_get_script(),cms_installed_jquery(),cms_path_to_url(),
         cms_to_stamp(),
         get_module_param(),set_module_param(),
         get_richeditor_setup(),get_syntaxeditor_setup(),
         get_server_permissions(),
         munge_string_to_file(),
         register_endsession_function(),
         set_session_value(),get_session_value()
         restricted_cms_permissions(),
         _la(), _ld() are shortform alternates to lang(), lang_by_realm() - to facilitate (possibly automated) source-file scanning for translatable stings c.f. _() and gettext()
         CMSMS\add_page_header(), CMSMS\remove_page_header(), CMSMS\get_page_headers(), CMSMS\sendheaders()
         add_page_headtext(),remove_page_headtext()
         add_page_foottext(),remove_page_foottext()
         CMSMS\get_page_headtext(),CMSMS\get_page_foottext()
         CMSMS\preferred_lang(),
         CMSMS\create_guid(),
         CMSMS\urlencode(),
         CMSMS\utf8_sort(),
         CMSMS\specialize(),
         CMSMS\specialize_array(),
         CMSMS\de_specialize(),
         CMSMS\de_specialize_array(),
         CMSMS\log_info(),CMSMS\log_notice(),CMSMS\log_warning(),CMSMS\log_error()
  - New content-security methods: CMSMS\execSpecialchars(), CMSMS\sanitizeVal(),
         CMSMS\Database\Connection::escStr();
  - New method: AdminUtils::get_module_icon()
  - New classes: ArrayTree, AutoCookieOperations, BasicEnum, Crypto, Lone, PageTreeOperations, RequestParameters, ScriptOperations, SignedCookieOperations, StylesOperations, TemplateOperations
  - Renamed classes: App, AppConfig, AppParams, PageTreeNode, UserParams (their old names are still usable)
  - New content-security methods: Crypto::encrypt_string(),decrypt_string(),hash_string(),random_string(),scramble_string()
  - New hook-replacement events: MetadataPostRender, MetadataPreRender, PageTopPostRender, PageTopPreRender,
      PageHeadPostRender, PageHeadPreRender, PageBodyPostRender, PageBodyPreRender, PostRequest
  - CHANGE: improved scalability, peformance on large sites
  - CHANGE: parameter-seprarators in generated URL strings default to '&' instead of '&amp;' (per RFC 3986)
  - CHANGE: don't ignore module-action parameters in frontend-request URLs
  - CHANGE: formerly hard-coded admin-menu data have been migrated into a standalone file. Those data can be tailored e.g. by the theme at runtime or by the site-developer anytime
  - FEATURE: new globally-available context-validation functions e.g. in module-actions :: if (!checkuuid($uuid)) exit; OR if (!$this->CheckContext()) exit;
  - CHANGE: if MariaDB database server is operating, prefer Aria databse engine over MyISAM
  - CHANGE: database connection also supports parameterized commands with a single non-array value (other than null) instead of an array including just that value
  - CHANGE: database connection reports success as the insert-id after an INSERT command applied to a table with an autoincrement field, instead of just true
  - CHANGE: database connection reports success as the the no. of affected rows after a DELETE command
  - CHANGE: database connection reliably reports success (as the no. of affected rows) after an UPDATE command
  - CHANGE: URL-string constructor methods support non-scalar paramter values
  - CHANGE: management of page styles is much more flexible
  - CHANGE: page style(s) are applied directly, insead of via a Design. Each design is now just a tool to facilitate site development
  - REMOVED: all strftime() usage, per PHP 8.1 deprecation. Instead use date() and related methods and classes
  - DEPRECATED: strftime()-compatibile site-preference 'defaultdateformat'. Instead use date()-compatible 'date_format' or 'datetime_format'
  - CHANGE: Smarty modifier-plugin cms_date_format undertands formats which are or include 'timed'
  - CHANGE: Smarty modifier-plugin cms_date_format sanitizes generated text, so no need to supplement in templates with '|cms_escape'
  - CHANGE: Smarty tolerates additional functions: _la(),_ld(),_lm(),cms_join_path(),CMSMS\entitize(),CMSMS\specialize(),CMSMS\sanitizeVal(),CMSMS\tailorpage(),date(),lang_by_realm(),str_contains(),str_ends_with(),str_starts_with(),strtotime(),stripos(),strripos(),strrpos()
  - CHANGE: global-scope Smarty-variables: $_site_root_path,$_site_root_url,$_site_themes_path,$_site_themes_url,$_site_uploads_path,$_site_uploads_url are automatically defined during each frontend request
  - CHANGE: Smarty resource-identifiers for templates and stylesheets support optional source/originator, like 'originator;name'
  - DEPRECATED: navigation templates which process data provided in node-ojects. Instead process node-ids.
  - BREAKING: renamed permission 'Modify User-defined Tags' to 'Manage User Plugins'
  - FEATURE: pages-reordering UI supports collapse selected/all levels, expand selected/all levels, search
  - REMOVED: MenuManager module is no longer distributed with CMSMS core. (As of 3.0 at least, the module is still operational.)
  - CHANGE: renamed CMSContentManager module to ContentManager (shorter module-names help deal with a Smarty 25-character limit on resource-names)
  - CHANGE: added ContentManager events: AddPre,AddPost,DeletePre,DeletePost,EditPre,EditPost,OrderPre,OrderPost
  - CHANGE: renamed CMSMailer module to OutMailer (with pending support for sending via external platforms like Mailchimp)
  - CHANGE: News module is non-core, and in future will be distributed independently of the core files (and possibly replaced)
  - SECURITY: admin users' personal data are stored in encrypted form
  - BREAKING: using the values of users' username, last_name, email in database queries (for sorting, filtering etc) is not useful. Instead massage query results in PHP, after decryption.
  - CHANGE: UTF8 string sorting and some other things e.g. strftime() replacement require PHP's Intl extension 
  - BREAKING: long-deprecated frontend creation of news items has been removed
  - BREAKING: newly created pages and newly-stored module-plugins default to cachable. This can be overridden when the page is saved, or the plugin deployed {nocache}{/nocache}.
  - ADD: extra permissions: 'Remote Administration', 'View Admin Log'
  - ADD: extra member of CmsCoreCapabilities - ROUTE_MODULE, for polling the modules which create route(s) during contruction or initialization
  - CHANGE: DesignManager module is non-core, and in future will be distributed independently of the core files
  - FEATURE: registered event handlers may be a callable, or a regular plugin, supplementing the existing support for modules and UDT's
  - FEATURE: event handlers may be registered intra-session, instead of using a hooklist (which 'send' events regardless of the event originator)
  - FEATURE: get-support URL (for display in admin pages) may be specified in 'developer mode'
  - FEATURE: added jQuery Poller object, a more-flexible alternative to the autoRefresh widget
  - FEATURE: added (non-core) module SyntaxMultiEditor allowing (for now) Ace|CodeMirror, to edit templates, stylesheets, UDT's,
      and related (but independent) get_editor_script(), {editorarea}, {edit_template}, and includable method.edittemplate.php
  - DEPRECATED: cleanValue() method. Instead use sanitizeVal() for inputs, cms_specialchars() and/or execSpecialchars() for outputs
  - DEPRECATED: cms_get_jquery() method. Instead, relevant content can be gathered via functions added to hook 'AdminHeaderSetup' and/or 'AdminBottomSetup', or a corresponding tag e.g. {gather_content list='AdminHeaderSetup'}
  - DEPRECATED: create_textarea() method. Instead use FormUtils::create_textarea() with suitable parameters
  - DEPRECATED: String values for application-states. Such states are now bit-flags, which can be OR'd, AND'd, compared ordinally
  - DEPRECATED: Module lazy-loading and related methods. Modules are now always loaded on-demand, effectively lazy.
  - DEPRECATED: Content pages' secure option
  - DEPRECATED: $config['ssl_url'] is now just an alias for root url
  - DEPRECATED: $config['ssl_uploads_url'] is now just an alias for uploads_url
  - DEPRECATED: $config['ssl_image_uploads_url'] is now just an alias for image_uploads_url
  - CHANGE: $config['ssl_css_url'] is no longer used.
  - CHANGE: $config->smart_root_url() is no longer used, and outputs deprecation message to log.
  - CHANGE: $config->smart_uploads_url() is no longer used, and outputs deprecation message to log.
  - CHANGE: $config->smart_image_uploads_url() is no longer used, and outputs deprecation message to log.
  - FEATURE: added new define in cms_config class: CMS_UPLOADS_URL
  - FEATURE: added new define in cms_config class: CMS_ADMIN_PATH
  - FEATURE: added the CMS_ASSETS_URL define and assets_url config entry.
  - FEATURE: automatically install tailored .htaccess or web.config files in several key folders.
  - DEPRECATED: UserTagOperations class is now merely an alias for SimpleTagOperations
  - DEPRECATED: user-plugin cachability is always false (as was the case for UDT's). Should always be true, and overridden by a nocache parameter in template where relevant
  - DEPRECATED: module-plugin cachability is set permanently when module is installed. Should always be true, and overridden by a nocache parameter in template where relevant
  - FEATURE: Sitedown mode now throws a 503 exception and outputs a 503 error code
  - FEATURE: The 503 error handler (maintenance mode) can be an Error Page.
  - BREAKING: module page-element creation methods like Create*() are processed via __call() in the module parent class. So any module-class which has its own __call() AND whose script(s) use such Create* method(s), must be adjusted. Best to call the relevant FormUtils-class method(s) directly. Otherwise, substitue parent::Create*() or e.g. work with get_parent_class($moduleobject) or tailor the local __call() to use the parent's __call() as needed.
  - DEPRECATED: Some seldom-used methods in the module API
  - DEPRECATED: Method CmsApp::clear_cached_files - replaced by more-secure alternative
  - DEPRECATED: Method cms_db_prefix(). Constant CMS_DB_PREFIX replaces that
  - DEPRECATED: Using PHP global variables (like $CMS_*) for recording/checking application-state. Instead use CMSMS\AppState methods and constants.
  - DEPRECATED: module_meta class methods. Replaced by cache-API compatible methods
  - BREAKING: Removed the long-deprecated SetParameters method from the module API
  - BREAKING: Removed the long-deprecated $module->smarty property.
  - BREAKING: Removed some deprecated and/or seldom-used methods from the core API
      can_admin_upload(), check_ownership(), cms_current_language()
      cms_set_frontend_language(), get_encoding(), pagination()
  - BREAKING: Removed long-deprecated methods from the cms_content_tree class
      addNode, getChildrenCount, getId, getLevel, getNodeByAlias, getNodeById
      getParentNode, getSiblingCount, getTag, hasChildren, setTag
  - BREAKING: If MySQL 5.6+ is used. Malformed SQL queries like SELECT ... GROUP BY ... silently fail. Corrected across the core, but dev's will need to correct them in other places.
  - BREAKING: Some database table-names and field-names have changed.
     layout_designs to module_designs
     layout_design_cssassoc to module_designs_css
     layout_design_tplassoc to module_designs_tpl
     layout_tpl_categories to layout_tpl_groups
     layout_tpl_type to layout_tpl_types
     The database should not be accessed directly, but if must be so, do your homework !
  - CHANGE: Pages-content is cached in the global cache. The redundant ContentCache class is gone
  - CHANGE: Adds the new pr_root_url config entry.  Returns the protocol relative root URI. root_url will always include the protocol.
  - CHANGE: Remove long deprecated passthru parameters to effect $_REQUEST because of potential security vulnerabilities.
  - Improved error message if there was an error parsing the template (or a duplicate content block).
  - Fixes content blocks, image blocks, module blocks containing whitespace in the name.
  - Minor fix to {cms_filepicker} plugin.
  - Improve the CmsModuleInfo class such that if the module class file is newer it will be loaded.
  - Increase the maxlength attribute for password input boxes in myaccount.
  - CHANGE: Location of system modules is /lib/modules
  - CHANGE: Default location of non-system modules is /assets/modules,
             /modules is now deprecated
  - Remove un-necessary moduleinterface.php from the root directory.
  - FEATURE: Adds a new hook method to the HookManager class to allow returning the first nonempty value.
  - CHANGE: refactor changegroupperm localization technique.
  - CHANGE: CmsApp suports __get(), __set() for recording any intra-request property, instead of using PHP global variables
  - FEATURE: New functions cms_notice, cms_warning, and cms_error
  - FEATURE: New AuditOperations class that allows swapping backend log-data processing methods
  - Revise many places where audit() was being called to call the new methods.
  - audit() method now uses the AuditOperations class
  - CMSModule::SetError() and CMSModule::SetMessage() now set session variables, and the strings will no longer be on the array
  - FEATURE: New CMSModule::AddAdminHeadText() method to allow module actions to add dynamic text to the head section of admin requests.
  - Renames a bunch of classes into namespaces, and cleans up a bunch of old, commented out code.
  - Replaces old "admin log" functionality with a new core module that has extra functionality.
  - CHANGE: Refactor mact processing.  get rid of un-necessary variables and duplicated code.
  - CHANGE: Autoloader will now try to load modules.  Modules can still only be instantiated once.
  - Improved autoloader now handles namespaced module classes if the module is already loaded.
  - FEATURE: New CmsError400Exception class.
  - Improve exception handling in include.php to handle when showtemplate is false.
  - CHANGE:
    - Deprecate undocumented request-parameter [$actionid]showtemplate, which has been used to suppress output.
      Instead use (defined) CMS_JOB_KEY parameter with value
      0 - default, normal page creation & display
      1 - process request with smarty support, but don't display anything, intended for ajax-requests & the like (no page-headers sent)
      2 - process request with minimal overhead (e.g. no smarty reduces request by 50%), for requests which 'do' something rather than display e.g. webhooks, async jobs (no page-headers sent)
  - DEPRECATED: Members 'id','returnid','action' in the $params array defined for module actions (corresponding variables incl. $name are defined).
  - CHANGE: Only modules that are not marked as lazy load (the default) will be loaded automatically during each request.
  - BREAKING: Current Smarty recognizes plugin functions named like smarty_xxx, but not smarty_cms_xxx. Existing plugins are cleaned up during upgrade.
  - BREAKING: Some edge-cases require an explicit 'nocache' parameter in page or template tags.
     We've seen problems with some (not all) instances like {block}{$X={Y}}{/block}.
     Arguably a smarty bug, can be generally cured by disabling caching, but that's tail-wag-dog, very slow.
     In the example, {block}{$X={Y nocache}}{/block} works just fine.
  - Optimize the cms_route_manager for performance
  - FEATURE: Adds ModuleOperations::is_module_loaded() method
    The constructor is sent the module, the actionid and returnid parameters
    The invoke method is sent an array of parameters.
  - FEATURE: Adds mechanism to spoof module actions instead of creating new ones, by calling a method instead of running the action per se.
     Protected method CMSModule::get_controller() identifies such callable (if any) for an action.
  - FEATURE: Allow loading action controller classes with the name Module/Controllers/<action>_action
  - REMOVE: file content.functions.php (last remaining function moved to page.functions.php)
  - Refactor the cms_module_plugin function for performance.
  - Refactor the route-lookup functionality for performance.
  - CHANGE: Database connection class method names conform to the current ADOdb API (although PHP doesn't care about the case used in function names)
  - FEATURE: The database connection class now accepts a single scalar for an argument when only one parameter is required in functions like getOne()
  - FEATURE: Field definitions for database table creation|modification are more flexible.
      Tiny-sized fields as TX, XT, BX, XB
      Integer-field aliases TI (aka I1 @ 8-bit), SI (aka I2 @ 16-bit), MI (new @ 24-bit), BI (aka I8 @ 64-bit)
      In addition to sized varchar and integer fields, also text and blob e.g. C(255) (up to 65535, but subject to any total-row-length (bytes, not chars) limit), I(4) (up to 10? although integer-column display-width is irrelevant in CMSMS), T(1024), X(16384)
      Field definition parameters pass through, so extras like UNSIGNED, FIRST, AFTER fieldname, CHARACTER SET type, COLLATION type, FOREIGN KEY details, ON UPDATE CURRENT_TIMESTAMP etc are viable.
      Reminder: field-names matching reserved-SQL-words must be quoted like `thisone` or else the table-creation will fail.
  - CHANGE: Remove the startup_mact_processing config entry, which controlled the stage, during page-rendering, when the default content block is processed.
  - FEATURE: Adds the {disable_template} plugin.
  - All module actions (except for showtemplate=false or other similar requests) create a new smarty template object
    and destroy it when the action is complete. This allows ProcessTemplateFromDatabase and ProcessTemplate and other related methods to be un-deprecated.
  - CHANGE: Convert admin passwords to use PHP's built-in password_hash and password_verify methods.
    - Still backwards compatible with older style for upgrades and resetting lost passwords.
    - Users upgrading from very old versions may have to reset passwords
  - FEATURE: Adds site-setting for smarty (frontend) cache lifetime.
  - CHANGE: smarty template directories for admin requests include /assets/templates.
  - Allow svg files to be cached and deflated in the sample htaccess.txt file
  - CHANGE: Now call InitializeFrontend() and InitializeAdmin() from within ModuleOperations::_load_module() on success.  instead of the module constructor.
  - CHANGE: Now call SetParameters from within ModuleOperations::_load_module() and not from the constructor.
  - FEATURE: New {theme_root} plugin for admin templates
  - FEATURE: New {admin_headtext} block plugin for admin templates
  - CHANGE: Module actions can now return output rather than echoing it.
  - CHANGE: Core module (ConsoleAuth) to process login/out
  - FEATURE: Adds a new hook for password strength
  - cms_mailer class now throws an exception if attempting to send an email without setting preferences first.
  - BREAKING: New methods and minor cleanup to admin themes (may introduce some breakage)
  - FEATURE: Adds {cms_queue_script} and {cms_render_scripts} plugins to allow combining javascripts and rendering them in fewer requests.
  - FEATURE: new Core::PreProcessScripts and Core::PostProcessScripts hooks
  - FEATURE: new Core::OnCacheClear hook when CMSMS clears the cache
  - BREAKING (possibly, pending 'migration'): Upgrade the system jquery and jquery-ui scripts.
    - some admin side javascript that relies on very old jquery may need changing
  - FEATURE: When using {cms_render_scripts} adds the ability to put inline javascript into <script type="text/cms_javascript">...</script>
    - javascript in these tags will be deferred loaded.
  - CHANGE: Fix lib/nls files so that UTF-8 locales are searched first.
  - FEATURE: cms_admin_utils::get_icon() and {admin_icon} can now find a suitable icon without having specified a filename extension.
  - SECURITY: checksum verification can no longer fish for files outside of the root directory.
  - Improvement to contentoperations::SetDefaultContent()
  - Improve input checking to cms_ipmatches.
  - FEATURE: Adds the cmsfile: smarty resource which is similar to the file resource but more restrictive
     (templates must exist BELOW one of the allowed template directories).  This resource also supports the ;top ;head and ;body
     suffixes to allow parsing a subset of the template.
  - FEATURE: The cmsfile: resource is now the default resource (instead of file:)
  - FEATURE: Now allow loading a page template directly from a smarty resource.
  - IMPROVE: Organize and refactor the template parsing code.
  - FEATURE: Added the ability to stop processing content, via an exception.  This is useful in situations where output is retrieved from a cache.
  - FEATURE: Added the {content_text} plugin to allow adding simple static text instructions for editors on the edit content page.
      text must be hardcoded.  i.e {content_text text='This is a test'}
  - FEATURE: Added the {assets_url} plugin to provide the complete URL to the assets folder.
  - FEATURE: New cleaned up simplex theme on initial install demonstrates template inheritance and other techniques
  - FEATURE: New default content on initial install
  - CHANGE: in HookManager::do_hook now smartly handle hook handlers that return null or no result, or single parameters
  - FEATURE: {cms_textarea} now supports the readonly and disabled attributes.
  - CHANGE: Remove redundant returnid parameter from mact url's
  - IMPROVE: {content_image} now allows alt="".
  - IMPROVE: {cms_action_url} will now use the default content page for frontend links IF a returnid is not specified or cannot be inferred
  - IMPROVE: get_page_id_or_alias_from_url() can now throw an exception and improve the way that parameters are merged and cleaned.
  - CHANGE:  RestrictUnknownParams is now OFF by default, AND cleaning is only done if RestrictUnknownParams() is enabled
  - CHANGE: Experiment - all active modules' Initialize*() method is called during each request, regardless of modules' 'load-laziness'
  - FEATURE: You can now pass :NOPRETTY: as a value for the prettyurl parameter in create_url (and CreateLink and CreateFrontendLink) to disable
      pretty url determiniation.
  - FEATURE: cms_action_url plugin now supports the 'alias' parameter.

News v2.21.5
  - Minor cleaning of parameters.

CMSContentManager - 1.2
  - REMOVED: Gets rid of secure options, flag output and bulk functionaltiy
  - modified to use CMS_ROOT_URL
  - Change connection timeout to 1 second.
  - Change processing to be a little more friendly to some environments wrt. content-size header.
  - FEATURE:Adds expand/functionality into reorder content (TODO: needs styling)
  - FEATURE: New 'add child here' icon in the content list.
  - FEATURE: Find functionality in content list can now search on page alias and url.
  - FEATURE: Allow setting the default content page from within the page edit form (for pages where it is possible, and permission allows)
  - FEATURE: New bulk action for when page_template_list is correctly defined in the config to allow setting bulk pages to a template resource.
  - FEATURE: When page_template_list is defined hide the set design and template bulk action

Installation Assistant - v1.4
  - Now require at least version 2.0.1 to upgrade
  - Now test the default character set
  - Now require at least PHP 7.0 and recommend 7.2
  - Upgrade to smarty v3.1.33
  - no longer change the config file on upgrade.  Though we will for install and freshen.
  - Now install default site-content from an XML file

ModuleManager v2.2
  - XML import code now lives here.
  - XML export code now lives here.

FileManager v1.6.4
  - modified to use CMS_ROOT_URL
  - Add a different icon for navigating up one level.
  - No longer allow uploading any php (or derivative) file.
  - No longer allow renaming any file to have a .php extension (or a derivative).
  - Now use CMSMS error console when displaying filepicker exceptions (no uncaught exceptions)

FilePicker v1.0.1
  - No longer allow overriding the filepicker type on the URL.
  - No longer allow uploading any .php files.
  - No longer set the size attribute on the input field, use CSS

AdminLog
  - New core module to replace the adminlog.php file

Search  - v1.52
  - The search results now contain _content_ and the page id for content pages.

AdminSearch v1.0.5
 - Rationalize the code a bit (remove un-necessary files).
 - Now optionally use a hook to get search slaves.
 - Optmization to the gathering of slaves.

DesignManager v1.1.6
 - Now properly handle renaming exported stylesheets and templates.
 - Now only reads {Navigator} tags, will not read {cms_module module=Navigator} tags (for a bit).
 - PHP 7 fixes
 - Minor template fixes in design list.

Navigator v1.0.9
 - Adds the title property to each node.

CmsJobManager v0.3
 - Now uses CURL initiate asynchronous requests

Version 2.2.6 - NO NAME SET
----------------------------------
Core - General
  - Fixes to AdminAlerts::load_by_name()

Search
  - Fix notice in PHP 7.1: A non well formed numeric value encountered...


Version 2.2.5 - Wawa
----------------------------------
Core - General
  - Fix minor security issue in the way login information was cached in cookies and the session.
  - Simplify rules around alias editing/generation in fillparams.
    If the alias field exists then we can adjust its value or recalculate an alias.
    Use basic properties, and ownership and permissions to determine if that field exists on the edit form.
  - Minor fixes to the CmsJobManager.


Version 2.2.4 - Little Paradise
----------------------------------
Core - General
  - Improvements to the Hook class.
  - Minor fix to usertagoperations.
  - Changes to the hierarchy selector to disallow circular references.
  - Fix problems with additional editors causing page aliases to be regenerated.
  - Minor fixes to Admin log browser.
  - Minor fixes to Admin login.
  - Add missing call Core::LoginPre hook.
  - Modify myaccount.php to call Core::EditUserPre hook BEFORE the password is set.
  - Fix documentation to CallUserTag.
  - Fix to default handling for content_image block.
  - Improve the help for the {page_attr} plugin.
  - Fix a potential warning in the {anchor} tag.
  - Fix boolean comparison in LoginOperations.

Installation Assistant v1.3.4
  - Fixes endless recursion issue with setting a tmpdir.
  - Fix issue with requiring a database prefix on upgrade.

FilePicker v1.0.2
  - Now allow specifying a 'useprefix' boolean parameter to the action url which will use the current top directory.
  - Add a prefix on all returned strings.
  - Slight modification to the profile class.
  - Now sends the FileManager::OnFileUploaded hook the same way as FileManager does.
  - Adds an exception handler around the change working directory stuff.

FileManager v1.6.5
  - Change upload action to call FileManager::OnFileUploaded hook before creating the thumbnail to allow a hook to rename the uploaded file.
  - Now enable creation of thumbnails on install.

MicroTiny v2.2.2
  - Minor fix for the filepicker if using a default filepicker profile that specifies a top directory.
  - Re-adds the table plugin (went missing when we upgraded tinymce).

ModuleManager v2.1.3
  - Adds audit line displaying status if cannot connect to ModuleRepository.

DesignManager v1.1.4
  - Fixes problems with the cancel button not marking the form as 'clean' (not dirty).


Version 2.2.99.1 - Happy Adventure
----------------------------------
Core - General
  - Fix an issue when parsing multiple content blocks.


Version 2.2.99 - Happy Adventure
----------------------------------
Core - General
  - Fixed a redirect loop problem on mixed HTTP/HTTPS sites when the secure flag was set on some pages.
  - Fixed a problem with prefilters and postfilters not working if placed in /assets/plugins.
  - Now use our own derivative of Smarty Internal Template so that we can send hooks, etc.
  - Improved error message if there was an error parsing the template (or a duplicate content block).
  - Fixes content blocks, image blocks, module blocks containing whitespace in the name.
  - Minor fix to {cms_filepicker} plugin.
  - Improve the CmsModuleInfo class such that if the module class file is newer it will be loaded.
  - Now generate the moduleinfo.ini file automatically on install or upgrade of a module.
  - Increase the maxlength attribute for password input boxes in myaccount.
  - Adds a StartsWith JavaScript shiv for IE11.
  - Revert the protocol-less URI for root_url (more changes coming for 2.99).
  - Get rid of the smart_url config option.
  - Fix a problem when testing for duplicate aliases of the form string-###  where the suffix integer was greater than 100.
  - More fixes to mact preprocessing if {content} was in the top of the template.
  - Minor fix to ExpandXMLPackage to not throw an exception in brief mode if module is not compatible with the current version of CMSMS.
  - adds new cms_entities_array function in misc to convert an array recursively to values.
  - Fixes transposed arguments in UserOperations::AddMemberGroup().
  - Better detection of duplicate content blocks.
  - Revert template_stack change to Smarty_CMS from 2.2.2
  - Improvements to HookManager.

CmsJobManager v0.1.1
  - Optimization of audit logging.
  - Change connection timeout to 1 second.
  - Change processing to be a little more friendly to some environments wrt. content-size header.

MicroTiny v2.2.1
  - Minor fix for filepicker plugin.

News v2.51.3
  - For security, no longer urldecode the detailtemplate parameter in detail view.
    This may have some implications for people that are specifying the detailtemplate parameter (with a template with special characters) from within a WYSIWYG (which is not recommended behavior).
  - Convert title and dropdown options and text fields to entities before display.

ModuleManager v2.1.2
  - Now sort modules in the installed tab a bit better.
  - Now handle module 'not available' a bit better.

FileManager v1.6.4
  - Add a different icon for navigating up one level.
  - No longer allow uploading any php (or derivative) file.
  - No longer allow renaming any file to have a .php extension (or a derivative).
  - Fixes an issue when improper/invalid values for root path and uploads path are manually specified in the config.php

FilePicker v1.0.1
  - No longer allow overriding the filepicker type on the URL.
  - No longer allow uploading any .php files.

CMSContentmanager v1.1.6
  - Now double check that the 'default parent' for new pages actually exists.

Navigator v1.0.8
  - Minor english documentation correction.

Installation Assistant v1.3.3
  - Now look for lib/include.php before include.php in step 8 and step 9 when connecting to CMSMS.
  - Fixes to upgrade routine for 2.1.5 wrt. the 'Manage Stylesheets' permission (ignore an exception)


Version 2.2.2 - Hearts Content
----------------------------------
Core - General
 - Additional security improvement in CMSModule::GetTemplateResource().
 - Now Smarty_CMS is no longer derived from SmartyBC (uses our own wrapper class) which prevents all occurrences of {php} tags from running.
 - Adds an admin directory .htaccess file to explicitly disable browser caching of any resources.
 - Fixes a relative path vulnerability in module_file_tpl resource.
 - Fixes a path building issue in CmsModuleInfo.
 - Fixes to parsing and generating moduleinfo.ini files.
 - Disallow any resource specifications with a * or a /.
     * This also means that no file resource specifications with path information will be permitted.
 - Move mact preprocessing to AFTER the template_top has been processed. So order of processing (for module actions on the frontend is)
     a:  template top
     b:  mact preprocessing (if enabled, which is the default)
     c:  template body
     d:  template head
 - Fix sureGetNodeByAlias to check if the input is numeric. If it is, assume that it is a page id, not an alias.
 - Fix alias generation in the ContentBase class to check if the input page title is numeric... If it is, prepend a character to it to ensure that integer casting will return 0.
 - Fix listtags to show tags using smarty_nocache_ function name prefix.
 - Improvements to the {form_start} plugin.
 - Fix silly, old issue in recursive_delete function.
 - Clean up more parameters from the content tag before passing to module action.
 - Fix local file inclusion vulnerability in listtags.
 - Now call get_userid() in debug_to_log instead of check_login()

AdminSearch v1.0.3
 - Now search the metadata field of content pages.
 - Fixes for single quotes in search results.

DesignManager v1.1.3
 - Set title attribute tags for edit/create template, stylesheet, design.
 - Remove debug statements.

MicroTiny v2.2
 - Upgrade tinymce to v4.6.x.
 - New tabfocus and hr plugins.

News v2.51.2
 - Fixes so that all cancel buttons work properly on new News articles.

Navigator v1.0.7
 - Adds a silly __get() method to the NavigatorNode class squash some notifications in the error logs.

ModuleManager v2.1.1
 - Now handlle remote module installs upgrades, and activates via a 2 request process to allow new module versions to be read into memory.

Installation Assistant v1.3.2
 - Correction to assets warning

Search v1.51.2
 - Now do an html entity decode on all content added to AddWords.


Version 2.2.1 - Hearts Desire
----------------------------------
Core - General
 - Improve the Smarty plugin loading to handle non-cachable plugins in the /assets/plugins and /plugins directories.
 - Fixes to transaction functions in database abstraction library.
 - Fix CMSModule::GetTemplateResource to no longer accept eval or string resources.
 - Fix CMSSmartySecurityPolicy so that debug_to_log is no longer an allowed function.

   Many thanks to Daniel Le Gall from SCRT SA, Switzerland for reporting the vulnerabilities.

Installation Assistant v1.3.1
 - On upgrade to 2.2.1 move all files from /plugins to /assets/plugins (they should only be third party plugins at this point).
 - On upgrade chmod the config.php to 444.

MicroTiny v2.1.1
 - Fix temporary JS call URL.

News v2.51.1
 - Fix frontend pagination.


Version 2.2 - Canada
----------------------------------
Core - General
  - Automatically turn on file locking for cached files to attempt to mitigate race conditions.
    NOTE:  On systems using archaic filesystems such as FAT and FAT32 CMSMS may no longer operate.
  - cms_filecache_driver now caches for 2 hours by default and has an improved cooperative locking test
  - Implement new database abstraction library that is compatible with (functionality wise) but improves upon adodb-lite.
  - Implement protocol-less URL's in the config.
  - Page tabs are now focusable (you can tab through page tabs and use enter to select one).
  - Minor fix to the {form_start} plugin.
  - Minor change to the {admin_icon} plugin (default image class).
  - Cache more items that are queried from the database, to reduce mysql load.
  - Minor change to tree operations functionality to reduce memory usage.
  - Fixed problem with order of content blocks when using {content_module} stuff.
  - Adds get_usage_string and the concept of a type assistant to template types.
  - Minor change to auto-alias determination routine.
  - Detect module_custom enhancements in the CmsModuleInfo stuff.
  - Refactor Admin authentication.
  - More fixes to the cms_url class.
  - Optimize the include.php file.
  - Adds built-in asynchronous task processing system.
  - Adds the ability to reduce redundant mentions in the Admin log (runs asynchronously).
  - Refactor the Admin log page to allow for better filtering and pagination.
  - Admin log now uses cms_date_format and cleans output.
  - Notification functions in the CmsAdminThemeBase class are now just stubs and do nothing. Will be removed at a later date.
  - Removed the GetNotificationOutput() method from the module API.
  - Adds classes for creating Alerts. This is much more advanced than the old Notifications system.
  - Minor accessibility tweaks to the OneEleven theme.
  - Fix numerous minor problems with the OneEleven theme.
  - Refactored the OneEleven Admin theme to use new Alerts classes instead of old Notifications.
  - Refactor the OneEleven Admin theme to display an alert icon in the shortcut bar, instead of in the navigation area.
  - Fixed sidenav in the one OneEleven theme now works properly. If sidenav is larger than viewport then don't use fixed... easy.
  - In OneEleven Now revert to small sidebar navigation (still floating) if screen is too narrow.
  - Removed notification settings from MyAccount and Global Settings.
  - Removed pseudocron granularity preferences.
  - cms_alert() and the new cms_confirm() JavaScript functions now return promises.
  - Revises much code to use cms_alert and cms_confirm() instead of the standard, but browser specific functions.
  - Fixes to the cache clearing methodology.
  - No longer check for duplicate content blocks in templates... NEEDS TESTING
  - New core events: ContentPreRender, LostPassword, LostPasswordReset, StylesheetPostRender.
  - Fix problem with the default parameter to the {content} tag.
  - Fix problem with the use_smartycache thing in system information.
  - Fix notice in useroperations.
  - Fixes problems where all files (including dot files) had to be writable before creating a module XML file.
  - Fixes minor notice in user operations.
  - Fixes for namespaced modules.
  - Fixes an issue in CmsLayoutTemplate when creating a template from a type.
  - Fixes an issue where a 404 handler error page would not be rendered correctly if for some reason the route did not specify a page id to load.
  - More fixes to cms_url class.
  - Numerous minor optimizations.
  - Add to content types the ability to set basic attributes for properties from within the page type definition.
  - Fixes problems with pagelink and link content types not being properly editable by additional editors.
  - Adds more type and content cleaning into the content types FillParams method(s).
  - Pass an explicit cacheid in to createtemplate in index.php.
  - Fix an error message in the autorefresh JavaScript class.
  - Fix problems that could result in uid=1 becoming inactive, and not a member of other groups when edited by another user.
  - Fix query problem in CmsLayoutStylesheetQuery with Mysql 5.6+.
  - The {content} tag now supports passing data attributes to the generated textarea, for use by syntax highlighter and WYSIWYG modules. i.e: {content data-foo="bar"}.
  - Refactoring of the Admin login code to be cleaner, more efficient, more secure.
  - No longer allow any modules to auto-upgrade on frontend requests.
  - Fix problem with cms_filecache_driver::clear().
  - Introduces the new Hook mechanism.
  - changegroupperms can now localize permission names,  and add an info string for each permission. (the listpermissions hook).
  - Add add_headtext(), get_headtext(), add_footertext(), get_footertext() methods to the Admin theme class.
  - minor refactoring of admin/index.php, admin/header.php, admin/footer.php and admin/moduleinterface.php.
  - now use hooks so that loaded modules can now add text to the head area of any Admin page output.
  - Change the help for the basic attributes.
  - New 'switch user' functionality for members of the Admin group.
  - Re-factor the content page selector ... now supports two modes (one for a simple list, and the previous dynamic one that is faster for large sites)
    the simple list mode is used for users with limited edit capabilities on pages.
  - Adds a new Smarty plugin {page_selector} to the Admin lib.
  - New arguments to the CreateHierarchyDropdown function (deprecated) and adjust documentation.
  - Content pages now have the ability to control whether or not the page wants any more children.
  - The TemplateType class now has a help callback to optionally allow retrieving help for templates of a particular type.
  - Permissions are now grouped logically by module/originator in ChangeGroupPermissions.
  - Now use HTTPS for the latest version check.
  - Adds the public_cache_url config entry,  and make sure that the css_url uses that by default.
  - Adds many core hooks.
  - Enhance the {page_image} plugin to optionally output a full HTML img tag if there is a value for the respective property.
  - Improve the {content_image} plugin to output nothing if there is no value for the property, and to output any non-internal arguments as attributes to the HTML img tag.
  - Upgrade to an un-modified version of smarty v3.1.31.
  - Move plugins directory to lib/plugins since we now have the assets/plugins directory for custom plugins.  Upgrading should preserve any custom plugins in the /plugins directory.
  - Add new plugins {thumbnail_url}, {file_url} and {cms_filepicker).
  - Add more intelligence to the tableoption handling for DataDictionary::CreateTableSQL.
  - Minor improvements to the asynchronous behaviour of the locking functionality.
  - #11295 - Cannot change the name of a UDT, always creates new UDT.
  - #11080 - Parameter $adding in GetContentBlockFieldInput always FALSE.
  - #11093 - Bad error message in jquery.cmsms_autorefresh.js.
  - #11133 - is_email() fails on domain check.
  - #11235 - munge_string_to_url leaves trailing dashes at the end of munged URL.
  - #11287 - Password reset form's password fields have different lengths.
  - Fix issue with module actions if 'content_en' block name was given on the default content block.
  - Better security when saving content pages.  Most primary fields are cast to their appropriate data type (int, bool, etc).  MenuText, and TitleAttribute can no longer contain html tags like <strong>foo</strong>.
  - Fixes issue with entities in redirecting links
  - The href/page argument to {cms_selflink} is now decoded before resolving to a page id.

Navigator v1.0.5
  - Minor optimizations.
  - Now use pageid in calculations of cacheid.
  - Now output template help to Navigator.

Installation Assistant v1.3
  - Only create dummy index.html files in subdirectories we created.
  - Clear cache after step 9.
  - Upgrade routine now asks for, and tests database credentials.
  - Upgrade routine now rewrites the config.php file (but keeps a backup).
  - Set a few more preferences to reasonable defaults on install. Specifically related to site cleanup and performance.
  - On installation, now insure that tmp/cache and tmp/templates_c directories are empty.
  - Now displays if files are going to be skipped.
  - Adds clear option for development purposes.
  - No longer ask to save database password.
  - On install now create the assets directory structure.
  - On upgrade (for 2.2) now create the assets directory structure and move tmp/configs, tmp/templates, module_custom, admin/custom, etc. within it.
  - When using the expanded installer allow changing the destination directory on step 1.
  - Check for existing files in the installation directory for new installations.
  - Added more notes to aide in diagnosing white screens
  - Modify package .zip files so that extracted files will usually have 644 permission (depends on the unzip routine used).

CmsJobManager
  - New core module to handle queued asynchronous tasks.

Content Manager
  - Minor tweak to bulk delete pages.
  - Minor fix to the active tab when changing a template or design.
  - Now listen to the 'default parent page' user preference.
  - Fix minor XSS problem in the Admin if some loser puts JavaScript into the title field or alias field or menu text field.
  - Now allow filtering pages by owner, editor, template, or design.  Only for Administrators with Modify any page, or Manage all content permissions.
  - Fix problems with auto-refresh being too fast for some operations.
  - Now auto scroll to the first matched page in a find.
  - Additional editors of a page cannot change the content type. Only owners, or users with the Manage all Content permissions.
  - Fix a problem with the call to GetTabElements.

DesignManager
  - Move the designs tab of the main interface into third position.
  - Implement sorting in edit design.
  - Remove option menus (for now) from templates, stylesheets, and designs tab.
  - Modify the template list functionality in edit-design to allow using keyboard control. Space or + to select an item on the left, and right arrow to move.
  - Modify the edit-design functionality to allow clicking on an attached template or stylesheet to edit it.
  - Generic templates now display a usage string.
  - When creating a new template, associate the new template with the default design.
  - Add reset buttons to the filter forms.
  - No longer check for default content block in a template.
  - Adds the ability to export a template to a file within the assets directory, and to import from the assets directory.
  - If a file exists in the assets/templates directory corresponding to a template name, do not allow in-browser editing.
  - Add bulk actions to allow importing and exporting multiple templates.
  - In the template list, if a file exists for a template... display it in the filename column.
  - Adds the ability to export a stylesheet to a file within the assets directory, and to import from the assets directory.
  - If a file exists in the assets/css directory corresponding to a stylesheet name, do not allow in-browser editing.
  - Add bulk actions to allow importing and exporting multiple stylesheets.
  - In the stylesheet list, if a file exists for a stylesheet display it in the filename column.

News v2.51
  - Minor fix to add category.
  - Removes GetNotificationOutput method.
  - Add a task that runs at least every 15 minutes to detect draft articles... create an alert for this.
  - Add an option to never create alerts about draft News articles.
  - Minor optimizations.
  - Adds postdate as parameters in events.
  - now output template help to Navigator.
  - New 'linked file' type field that allows selecting a file using the filepicker.
  - Changes the default summary and detail templates to support the linked_file field type, and uses {thumbnail_url} and {file_url}.

FileManager v1.6.3
  - Move settings to it's own menu item under Site Admin.
  - Fix minor problem with moving a directory.
  - Minor fix to move file functionality.
  - Adds OnFileDeleted event.
  - Adds 'view raw file' icon in each viewable row.
  - Minor formatting changes in file list.
  - Now display clickable path entries for easier navigation.

Search
  - Convert to store all data using the InnoDB engine.
  - Use transactions for the addwords and deletewords stuff for performance.
  - Fix problem with query and record expiry.

AdminSearch v1.0.3
  - Fixes problem with use of 'Use Admin Search' permission.
  - Now searches for matching strings within templates and stylesheets that are stored as files.
  - Now listens to the HasSearchableContent method when searching content pages.

ModuleManager
  - Now detect if module_custom directories exist and are populated and warn about this before upgrading a module.
  - Minor string changes.
  - Improvements to error handling in the new versions tab.
  - Write a confirmation form for uninstalling a module that displays the UninstallPreMessage or uses a default.
  - Now don't allow disabling / uninstalling myself.
  - Don't hide the upgrades tab when there are no upgrades, but show the number of upgrades in the tab title instead.
  - Now use HTTPS for requests to ModuleRepository.
  - Trigger a hook before exporting a module to XML.

MicroTiny v2.1
  - New version of the tinymce wysiwyg editor.
  - Adds a mailto plugin.
  - Now use the FilePicker module for a filepicker, required rewriting the cmsms_filepicker tinymce plugin.
  - Enable the title attribute on the image plugin.
  - Now uses PUBLIC_CACHE_LOCATION for cache files instead of hardcoding tmp/cache


Version 2.1.6 - Spanish Wells
----------------------------------
Core - General
  - Now attempt to detect if a template name passed into CmsModule::GetTemplateResource() is already a resource string.
  - endswith is now an accepted function in Smarty templates (fixes typo in security policy).
  - Fixes for CmsNlsOperations when using a language detector.
  - Fixes warnings in useroperations.
  - Fixes problem with cms_selflink dir='up' since 2013.
  - Modifies the OneEleven theme to set the meta referrer attribute for security purposes.
  - Modifies the functionality of the CSRF tokens to be more secure (only set the cookie in one location, only set the session variable from the cookie).
  - Increase Admin users list limit.
  - Reduce time limit for daily version check to 3 seconds.
  - cleanValues in Admin log and List Content.
  - Minor fix to the relative_time plugin.
  - Admin menu item URLs can now be built from the remaining members of the object, if not specified.
  - {content_image} and {content_module} now preserve order properly and support the priority attribute.

  - #11198 - Fixes problem with cms_selflink with aliases that starts with a numeric sign.

Content Manager v1.1.4
  - Fix bulk set-non-cachable functionality.
  - Fix a bug wrt content blocks and the adding flag.

Installation Assistant v1.0.4
  - Adds recommended check for ZipArchive.
  - Improves method of determining a temp directory.

ModuleManager v2.0.5
  - Improves functionality if ModuleRepository is not available.

News v2.50.6
  - Minor fix to editing news articles from the Admin interface.


Version 2.1.5 - High Rock
----------------------------------
Core - General
  - Fix fatal error if an extcss stylesheet was placed in the Admin theme.
  - Another minor fix to clearing cached files.
  - Fixes problems where all files (including dot files) had to be writable before creating a module XML file.
  - Fixes minor notice in user operations.
  - Fixes for namespaced modules.
  - Fixes an issue in CmsLayoutTemplate when creating a template from a type.
  - Fixes an issue where a 404 handler error page would not be rendered correctly if for some reason the route did not specify a page id to load.
  - More fixes to cms_url class.
  - Improve the way page aliases are munged when they are supplied.
  - Improve the error generated when a page alias cannot be generated.
  - Minor fixes to the form_start plugin.
  - Minor fixes to generation of moduleinfo.ini.
  - Fix an error message in the autorefresh JavaScript class.
  - Fix problems that could result in uid=1 becoming inactive, and not a member of other groups when edited by another user.
  - Fix query problem in CmsLayoutStylesheetQuery with Mysql 5.6+.

  - #11080 - Parameter $adding in GetContentBlockFieldInput always FALSE.
  - #11093 - Bad error message in jquery.cmsms_autorefresh.js.

Content Manager
  - Improve error handling in Edit Content.
  - Fix a problem with the call to GetTabElements.

Design Manager
  - Fix problem with resetting a template back to factory defaults, or creating a new template from factory defaults.

Module Manager
  - Improve the way modules with dependencies are installed and upgraded. (Got rid of the queue stuff).

AdminSearch
  - Use 'Manage Stylesheets' permission, not 'Modify Stylesheets' when searching stylesheets.

Phar Installer
  - Adds missing 'Manage Stylesheets' permission that would not be created on upgrade from 1.12.



Version 2.1.4 - Freetown
----------------------------------
Core - General
  - Fix to the clear_cached_file() method which should fix problems with module installation.
  - Minor tweak to distributed sample htaccess.txt file.

Phar Installer
  - Fixes issues with respect to hanging on step 7 when suhosin PHP addon was installed.
  - Minor PHP7 Fixes.

Module Manager
  - Fixes problems where all files (including dot files) had to be writable before creating a module XML file.


Version 2.1.3 - Black Point
----------------------------------
Core - General
  - Security fix to prevent HTTP_HOST attacks. Many thanks to I-TRACING (www.i-tracing.com) for reporting it!!
  - Remove stub .htaccess files from subdirectories.
  - Update the included sample htaccess.txt file for security.
  - Fix for endless loop when calculating a page alias in utf-8 environments.
  - Fix for endless loop when calculating a page alias and a page name/title ended with -
  - Fixes a notice on the login page.
  - Optimize LoadContentFromId() to be typesafe, and use default page, if the id passed in is invalid.
  - Fix error condition if there were no default default design, or default page template.
  - Fix problem with system verification.

  - #10825 - Admin-account settings don't remember startpage if you set one
  - #10874 - When creating a page and the title has specific characters, CMSMS stops responding
  - #10910 - content and content_module order incorrect Admin page
  - #10911 - 'Use Admin Search' permission not being used in 2.1.2
  - #10921 - Content Field to Display in Name Column not used

AdminSearch v1.0.1
  - Minor fix to permissions checks.

Navigator v1.0.3
  - Improved exception handling on install

News v2.50.5
  - Fix error condition if no results were returned.

Installation Assistant v1.0.3.1
  - Tweaks to README files.
  - Improved error handling in some circumstances.
  - Fix some PHP7 issues.

FileManager
  - #10871 - Filemanager moving folder


Version 2.1.2 - Andros Town
----------------------------------
Core - General
- Minor fix to missing language string stuff
- Fixes to home page preferences
- API documentation fixes (minor)
- Fixes for ajax_content (the Ajax routine behind the parent selector in edit content) to handle ordering inconsistencies
- Remove die statement in is_email
- Minor fix to the relative_time modifier
- Upgrade CMSMailer to 6.2.14
- Now do a check for E_ALL in the system info

News v2.50.4
- Now all field definitions can be deleted
- Minor fix to default action if no results were returned...

ModuleManager v2.0.2
- Revamp module dependency calculations when installing a module
- Minor fix for some notices in install and upgrade modules
- Minor typo fixes
- Minor fixes for PHP7

MenuManager  v1.50.2
- make sure that uninstall cleans up properly

MicroTiny v2.0.3
- minor template fix
- fixes for stylesheet overrides


Version 2.1.1 - Nicholls Town
----------------------------------
Core - General
- Fix the template compiler so that content blocks can be placed within sub templates and detected with the {include} tag
- Fix minor problem with checksum verification
- Fix to the cms_cache_handler class
- Minor fix to SetAllPageHierarchies()
- Correct location where session was started in frontend displays
- Fix the default option for {content_image}
- Modify the locker to use a beacon if supported, when unlocking
- Fix missing permissions when a 1.12 site was upgraded (installation assistant)

CMSContentmanager v1.1
- Minor template changes in edit content wrt. locking
- Adds ability to clear content locks (Admins can clear all locks, regular users can only clear their locks)
- Enhancements to the action to bulk set designs to show only page templates by default, but to optionally show more

DesignManager v1.1.1
- Minor template changes in edit content wrt. locking
- Adds ability to clear template and CSS locks (Admins can clear all locks, regular users can only clear their locks)


Version 2.1 - Bahamas
----------------------------------
Core - General
- Minor performance tweaks to sample htaccess.txt
- Minor fix to the ProcessTemplateFromDatabase module API method.
- Improvements and re-factor the way headers are sent wrt caching
- Add a new method to the ModuleOperations class to allow a module to be within a namespace.
- Enhances the Group class.
- Enhancements and fixes to the cms_url class.
- Modified the $mod->smarty reference to be smarter... it is now deprecated.
- Fixes issue with https requests (#10697)
- Modifies The CmsLayoutTemplate class and CmsLayoutTemplateQuery to allow filtering on listable or non listable
  or setting a template as listable (default) or non listable
- Fixes a problem with styling of the login form if tasks must be run AND a module needs upgrading.
- Fixes to the cloning of templates in CmsLayoutTemplate
- Fixes problem with SetAllHierarchyPositions that cleared the entire cache instead of only the necessary part of it.
- Adds the unloadCancel handler to the lockManager jQuery plugin.
- Moves version.php and include.php inside the lib directory so that they are easier to protect from unwanted direct access.
- Fixes to page alias tests when manually entering a page alias.
- Missing language strings are no longer output to Admin log, but to the debug log.
- Requests for modules that are not installed/enabled, or for invalid actions will now result in 404 errors.
- Fixed problem where restricted content editors could implicitly change the page alias.
- Improvements to the system information page, particularly the bbcode output.
- cms_init_editor, form_start, and cms_action_url plugins are no longer cachable.
- Adds the 'adminonly' option to the {content}, {content_image}, and {content_module} tags to allow only members of the 'Admin' group to manipulate the values of that block.
- Add a trivial check to the sitedown message to make sure that it is not empty.
- Minor fixes for PHP 7

MicroTiny v2.0.2
- Now add page hierarchy to autocomplete text when using the linker.
- Now use $smarty->CreateTemplate for clarity when compling the config template
- Now explicitly assign urls so that they do not get caced by smarty.
- Slightly tweak the default HTML content in the example tab.
- Updated tinymce to the latest 4.2.7 version, included the 'paste' plugin, and turned on 'paste_as_text'.
- Added the ability to enable the table plugin, now distribute the table plugin

CMSContentManager v1.0.2
- Fix problem with pagedefault metadata.
- Fixes for handling no listable templates for a design
- More work with locking.  With only one exception all locking and unlocking is initiated via javascript.
- Minor fix to copycontent

DesignManager v1.1
- Adds ability to toggle the listability of a template.
- Fixes problems with lost changes if there is a syntax error in the template.
- More work with locking.  With only one exception all locking and unlocking is initiated via JavaScript.

News v2.50.3
- Fixes minor issue with pagination in News Admin console.
- Fix errors in the default form template.
- Fixed URL to long issues on redirection after adding/editing article.

Search v1.50.2
- Minor PHP7 fixes.

ModuleManager 2.0.1
- Minor fix to which modules could be uninstalled and deactivated.


Version 2.0.1.1 - Adelaide
----------------------------------
Fix to the $this->smarty magic method in the module class to resolve to the action template or the global Smarty.


Version 2.0.1 - Adelaide
----------------------------------
Core - General
- Improved optimization in ContentOperations::SetAllHierarchyPositions.
- Fixed return type of ContentOperations::GetPageIdFromAlias().
- Help for the {cms_html_options} plugin.
- Change the default page template to use {Navigator}.
- Explicitly force $smarty->fetch() to create a new template, and therefore a new scope. Keep track of scopes in a stack.
- Change prototype to CMSModule::DoActionBase to pass in the current template object.
- SITENAME is now assigned as a Smarty global.
  (fixes some variable scope issues)
- Fix problem with changing content types.
- Fix problem with CmsLayoutTemplateQuery wrt the editable option, that generated an SQL error.
  (resolves problems where people have additional editor access to templates, but no other design manager permissions).
- Fix minor JavaScript errors in plugin (error checking).
- Fix problems where If assign was passed to a {content} tag, do not pass it to the module on a mact request.
- Implements the completely forgotten 403 exception stuff and the IsPermitted content method.
- Improve the cmsms_dirtyform jQuery plugin to support the unload handler and an onUnload callback.
- Fixed the jQuery page selector plugin when the current value points to an invalid page,  and fixes for asynchronous Ajax.
- Adds a globally available cms_busy() JavaScript function for the Admin.
- Fix problem with html entitites in email addresses in user settings.
- Fix problem with {content cssname=string} and quotes.
- Changed cmsms plugins to use $smarty->getTemplateVars() instead of $smarty->get_template_vars() because of scope issues.
- Minor fix to {form_start} when not used in a module.
- Improved error handling for cms_stylesheet.  Now will generate a message in the Admin log, and an html comment on error.
- Module actions can now 'return' their results

CMSContentManager v1.0.1
- Fixes for changing content types.
- Adds a title for some contextual help if a template is not available for a content item.
- Clear any locks if an exception occurred while submitting a content item.
- Improvements to error handling with apply and preview.
- Content list now refreshes every 30 seconds to display up-to-date lock information.

DesignManager v1.0.1
- Clear the type_default flag when copying a template.
- Clear any locks if an exception occurred while submitting a template.
- Clear any locks if an exception occurred while submitting a stylesheet.
- Template and stylesheet lists now refresh every 30 seconds to display up-to-date lock information.
- Fixes for design exporting templates with protocol-less URLs in them.

MenuManager v1.50.1
- Changes to createSmartyTemplate calls (now use $smarty->get_template_parent()).

Navigator v1.0.1
- Changes to createSmartyTemplate calls (now use $smarty->get_template_parent()).
- Minor change to the help ($node->children_exist)

Search v1.50.1
- Changes to createSmartyTemplate calls (now use $smarty->get_template_parent()).

News v2.50.1
- Changes to createSmartyTemplate calls (now use $smarty->get_template_parent()).
- Fix problem with custom fields not being assigned in fesubmit.
- Fix minor problem with html entities in the detail template parameter.

FileManager v1.5.1
- Fix minor problem with Smarty scope in the drop zone.


Version 2.0 - Australia
----------------------------------
+++ Initial Release +++
